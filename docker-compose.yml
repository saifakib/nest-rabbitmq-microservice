version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol (for services)
      - "15672:15672" # Management UI (browser access)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-auth:
    image: mongo:latest
    container_name: mongo-auth
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: auth-db
    volumes:
      - mongo_auth_data:/data/db
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-product:
    image: mongo:latest
    container_name: mongo-product
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: product-db
    volumes:
      - mongo_product_data:/data/db
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "3000:3000"
    env_file:
      - .env.example-auth
    depends_on:
      mongo-auth:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "3001:3001"
    env_file:
      - .env.example-product
    depends_on:
      mongo-product:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

volumes:
  rabbitmq_data:
  mongo_auth_data:
  mongo_product_data:

networks:
  microservices-network:
    driver: bridge